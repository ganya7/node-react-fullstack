const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const keys = require('../config/keys');
const mongoose = require('mongoose');
const User = mongoose.model('users');


passport.serializeUser((user, done) => {
    // 1st object to done is an error object if any exists
    // user.id corresponds to the id generated by the mongodb for each of the document
    done(null, user.id);
    // this is stuffed into the cookie
});

passport.deserializeUser((id, done) => {
    User.findById(id)
        .then((user) => {
            done(null, user);
        });
});

passport.use(new GoogleStrategy({
    clientID: keys.googleClientID,
    clientSecret: keys.googleClientSecret,
    callbackURL: '/auth/google/callback'
}, (accessToken, refreshToken, profile, done) => {
    User.findOne({ googleID: profile.id }).then(
        (existingUser) => {
            if (existingUser) {
                done(null, existingUser);
            } else {
                new User({ googleID: profile.id })
                    .save()
                    .then(user => done(null, user));
            }
        }
    );
}));